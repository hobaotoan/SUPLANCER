{"ast":null,"code":"import AssessTaskForm from \"../FreelancerTraining/AssessTaskForm.vue\";\nimport AddTaskForm from \"../FreelancerTraining/AddTaskForm.vue\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  name: \"TaskList\",\n  components: {\n    AssessTaskForm,\n    AddTaskForm\n  },\n\n  async created() {\n    try {\n      const freelancerId = this.$route.params.freelancerId;\n      await this.$store.dispatch(\"setTaskList\", freelancerId);\n    } catch (error) {\n      console.log(error);\n    }\n  },\n\n  computed: { ...mapGetters({\n      taskList: \"getTaskList\"\n    })\n  },\n  methods: {\n    deleteTask(taskId) {\n      this.$store.dispatch(\"deleteTask\", taskId);\n    },\n\n    setTaskCurrent(task) {\n      this.$store.commit(\"SET_TASK_CURRENT\", task);\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA0EA,OAAOA,cAAP,MAA2B,0CAA3B;AACA,OAAOC,WAAP,MAAwB,uCAAxB;AACA,SAASC,UAAT,QAA2B,MAA3B;AAEA,eAAe;EACXC,IAAI,EAAE,UADK;EAEXC,UAAU,EAAE;IAAEJ,cAAF;IAAkBC;EAAlB,CAFD;;EAGX,MAAMI,OAAN,GAAgB;IACZ,IAAI;MACA,MAAMC,YAAW,GAAI,KAAKC,MAAL,CAAYC,MAAZ,CAAmBF,YAAxC;MAEA,MAAM,KAAKG,MAAL,CAAYC,QAAZ,CAAqB,aAArB,EAAoCJ,YAApC,CAAN;IACJ,CAJA,CAIE,OAAOK,KAAP,EAAc;MACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACJ;EACH,CAXU;;EAYXG,QAAQ,EAAE,EAAE,GAAGZ,UAAU,CAAC;MAAEa,QAAQ,EAAE;IAAZ,CAAD;EAAf,CAZC;EAaXC,OAAO,EAAE;IACLC,UAAU,CAACC,MAAD,EAAS;MACf,KAAKT,MAAL,CAAYC,QAAZ,CAAqB,YAArB,EAAmCQ,MAAnC;IACH,CAHI;;IAILC,cAAc,CAACC,IAAD,EAAO;MACjB,KAAKX,MAAL,CAAYY,MAAZ,CAAmB,kBAAnB,EAAuCD,IAAvC;IACH;;EANI;AAbE,CAAf","names":["AssessTaskForm","AddTaskForm","mapGetters","name","components","created","freelancerId","$route","params","$store","dispatch","error","console","log","computed","taskList","methods","deleteTask","taskId","setTaskCurrent","task","commit"],"sourceRoot":"","sources":["C:\\Users\\Admin\\Downloads\\internship-management-main\\internship-management-main\\frontend\\src\\components\\Project\\FreelancerTraining\\TasksList.vue"],"sourcesContent":["<template>\n    <div class=\"\">\n        <div class=\"task-list\">\n            <h4\n                class=\"header-list m-0 p-2 pt-3 fw-bold col-6\"\n            >\n                Danh sách công việc\n                <div class=\"line my-3\"></div>\n            </h4>\n        </div>\n        <table class=\"table table-striped\">\n            <thead>\n                <tr class=\"text-center\">\n                    <th scope=\"col\">Tuần</th>\n                    <th scope=\"col\">Tên công việc</th>\n                    <th scope=\"col \">Ngày hoàn thành</th>\n                    <th scope=\"col\">Trạng thái</th>\n                    <th scope=\"col\">Đánh giá</th>\n                    <th scope=\"col\">Tùy chọn</th>\n                </tr>\n            </thead>\n            <tbody class=\"text-center\">\n                <tr v-for=\"(task, index) in taskList\" :key=\"index\">\n                    <th scope=\"row\">{{ index + 1 }}</th>\n                    <td class=\"col text-center\">{{ task.title }}</td>\n                    <td class=\"text-center\">\n                        {{ new Date(task.time).toLocaleDateString(\"en-GB\") }}\n                    </td>\n\n                    <td class=\"col-2\">\n                        {{ task.status ? \"Đã hoàn thành\" : \"Chưa hoàn thành\" }}\n                    </td>\n                    <td v-if=\"task.message\" class=\"col-3 text-start\">\n                        {{ task.message }}\n                    </td>\n                    <td v-else class=\"col-3 text-center\">\n                        <div class=\"bg-warning rounded-2 text-center\" style=\"width: 150px\">\n                            Chưa có đánh giá\n                        </div>\n                    </td>\n\n                    <td class=\"\">\n                        <button\n                            type=\"button\"\n                            class=\"btn text-warning\"\n                            data-bs-toggle=\"modal\"\n                            data-bs-target=\"#ModalAssessTask\"\n                            @click=\"setTaskCurrent(task)\"\n                        >\n                            <i class=\"bi bi-pencil-square fs-5\"></i>\n                        </button>\n                        <button class=\"btn\" @click=\"deleteTask(task._id)\">\n                            <i class=\"bi bi-archive-fill text-danger fs-5\"></i>\n                        </button>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n        <div class=\"w-100 option d-flex justify-content-center\">\n            <button\n                type=\"button\"\n                class=\"btn btn-success\"\n                data-bs-toggle=\"modal\"\n                data-bs-target=\"#AddTaskModal\"\n            >\n                <i class=\"bi bi-plus-circle-fill\"></i> Thêm công việc\n            </button>\n        </div>\n        <AssessTaskForm />\n        <AddTaskForm />\n    </div>\n</template>\n\n<script>\nimport AssessTaskForm from \"../FreelancerTraining/AssessTaskForm.vue\";\nimport AddTaskForm from \"../FreelancerTraining/AddTaskForm.vue\";\nimport { mapGetters } from \"vuex\";\n\nexport default {\n    name: \"TaskList\",\n    components: { AssessTaskForm, AddTaskForm },\n    async created() {\n        try {\n            const freelancerId = this.$route.params.freelancerId;\n\n            await this.$store.dispatch(\"setTaskList\", freelancerId);\n        } catch (error) {\n            console.log(error);\n        }\n    },\n    computed: { ...mapGetters({ taskList: \"getTaskList\" }) },\n    methods: {\n        deleteTask(taskId) {\n            this.$store.dispatch(\"deleteTask\", taskId);\n        },\n        setTaskCurrent(task) {\n            this.$store.commit(\"SET_TASK_CURRENT\", task);\n        },\n    },\n};\n</script>\n\n<style scoped>\n.btn:hover {\n    opacity: 0.8;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}