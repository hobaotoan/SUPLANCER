{"ast":null,"code":"import axios from \"axios\";\nimport config from \"@/config/index.js\";\nimport { mapGetters } from \"vuex\";\nimport AssessResult from \"../FreelancerTraining/AssessResult.vue\";\nexport default {\n  name: \"InforFreelancerTraining\",\n  components: {\n    AssessResult\n  },\n  computed: { ...mapGetters({\n      freelancer: \"getFreelancerTrainingDetail\",\n      taskList: \"getTaskList\"\n    }),\n\n    progress() {\n      let completed = 0;\n\n      for (let i = 0; i < this.taskList.length; i++) {\n        if (this.taskList[i].status) {\n          completed++;\n        }\n      }\n\n      return completed / this.taskList.length * 100;\n    }\n\n  },\n\n  async created() {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const freelancerId = this.$route.params.freelancerId;\n      const res = await axios.get(`${config.domain}/project/get-infor-training`, {\n        params: {\n          freelancerId\n        },\n        headers: {\n          Authorization: \"Bearer \" + token\n        }\n      });\n      this.$store.commit(\"SET_FREELANCER_TRAINING_DETAIL\", { ...res.data.result,\n        progress: this.progressCaculate(res.data.result.tasks)\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  },\n\n  methods: {\n    progressCaculate(tasks) {\n      let completed = 0;\n\n      for (let i = 0; i < tasks.length; i++) {\n        if (tasks[i].status) {\n          completed++;\n        }\n      }\n\n      return completed / tasks.length * 100;\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA6DA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,UAAT,QAA2B,MAA3B;AACA,OAAOC,YAAP,MAAyB,wCAAzB;AACA,eAAe;EACXC,IAAI,EAAE,yBADK;EAEXC,UAAU,EAAE;IAAEF;EAAF,CAFD;EAIXG,QAAQ,EAAE,EACN,GAAGJ,UAAU,CAAC;MACVK,UAAU,EAAE,6BADF;MAEVC,QAAQ,EAAE;IAFA,CAAD,CADP;;IAKNC,QAAQ,GAAG;MACP,IAAIC,SAAQ,GAAI,CAAhB;;MACA,KAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,KAAKH,QAAL,CAAcI,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;QAC3C,IAAI,KAAKH,QAAL,CAAcG,CAAd,EAAiBE,MAArB,EAA6B;UACzBH,SAAS;QACb;MACJ;;MAEA,OAAQA,SAAQ,GAAI,KAAKF,QAAL,CAAcI,MAA3B,GAAqC,GAA5C;IACH;;EAdK,CAJC;;EAoBX,MAAME,OAAN,GAAgB;IACZ,IAAI;MACA,MAAMC,KAAI,GAAIC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;MACA,MAAMC,YAAW,GAAI,KAAKC,MAAL,CAAYC,MAAZ,CAAmBF,YAAxC;MACA,MAAMG,GAAE,GAAI,MAAMrB,KAAK,CAACsB,GAAN,CACb,GAAErB,MAAM,CAACsB,MAAO,6BADH,EAEd;QACIH,MAAM,EAAE;UACJF;QADI,CADZ;QAIIM,OAAO,EAAE;UAAEC,aAAa,EAAE,YAAYV;QAA7B;MAJb,CAFc,CAAlB;MASA,KAAKW,MAAL,CAAYC,MAAZ,CAAmB,gCAAnB,EAAqD,EACjD,GAAGN,GAAG,CAACO,IAAJ,CAASC,MADqC;QAEjDpB,QAAQ,EAAE,KAAKqB,gBAAL,CAAsBT,GAAG,CAACO,IAAJ,CAASC,MAAT,CAAgBE,KAAtC;MAFuC,CAArD;IAIJ,CAhBA,CAgBE,OAAOC,KAAP,EAAc;MACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACJ;EACH,CAxCU;;EAyCXG,OAAO,EAAE;IACLL,gBAAgB,CAACC,KAAD,EAAQ;MACpB,IAAIrB,SAAQ,GAAI,CAAhB;;MACA,KAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIoB,KAAK,CAACnB,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;QACnC,IAAIoB,KAAK,CAACpB,CAAD,CAAL,CAASE,MAAb,EAAqB;UACjBH,SAAS;QACb;MACJ;;MAEA,OAAQA,SAAQ,GAAIqB,KAAK,CAACnB,MAAnB,GAA6B,GAApC;IACH;;EAVI;AAzCE,CAAf","names":["axios","config","mapGetters","AssessResult","name","components","computed","freelancer","taskList","progress","completed","i","length","status","created","token","localStorage","getItem","freelancerId","$route","params","res","get","domain","headers","Authorization","$store","commit","data","result","progressCaculate","tasks","error","console","log","methods"],"sourceRoot":"","sources":["C:\\Users\\Admin\\Downloads\\internship-management-main\\internship-management-main\\frontend\\src\\components\\Project\\FreelancerTraining\\InforFreelancerTraining.vue"],"sourcesContent":["<template>\n    <div class=\"training-detail container\">\n        <div class=\"training-detail-freelancer\">\n            <div class=\"row align-items-center border rounded-2 p-5\">\n                <div\n                    class=\"col-5 d-flex justify-content-center\"\n                    style=\"height: 180px; width: 200px\"\n                >\n                    <img\n                        :src=\"freelancer.urlAvatar\"\n                        alt=\"\"\n                        style=\"height: 100%; width: 100%\"\n                        class=\"rounded-circle\"\n                    />\n                </div>\n                <div class=\"col-7 flex-grow-1\" style=\"min-height: 200px\">\n                    <div class=\"col-12 my-1\">\n                        <strong>MSSV: </strong> {{ freelancer.username }}\n                    </div>\n                    <div class=\"col-12 my-1\">\n                        <strong>Họ và tên: </strong> {{ freelancer.name }}\n                    </div>\n                    <div class=\"col-12 my-1\">\n                        <strong>Email: </strong>\n                        {{ freelancer.email }}\n                    </div>\n\n                    <div class=\"col-12 my-1\">\n                        <strong>Tiến độ: </strong>\n\n                        <div class=\"progress w-100 my-3\">\n                            <div\n                                role=\"progressbar\"\n                                :class=\"\n                                    progress\n                                        ? ' bg-success text-light d-flex justify-content-center align-items-center'\n                                        : ' d-flex justify-content-center align-items-center'\n                                \"\n                                :style=\"`width: ${progress || 100}%`\"\n                            >\n                                {{ `${progress ? progress.toFixed() : 0}%` }}\n                            </div>\n                        </div>\n                    </div>\n                    <button\n                        type=\"button\"\n                        class=\"btn btn-outline-warning me-3\"\n                        data-bs-toggle=\"modal\"\n                        data-bs-target=\"#AssessResultModal\"\n                    >\n                        <i class=\"bi bi-pencil-square\"></i> Đánh giá kết quả\n                        thực tập\n                    </button>\n                </div>\n            </div>\n        </div>\n        <AssessResult />\n    </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport config from \"@/config/index.js\";\nimport { mapGetters } from \"vuex\";\nimport AssessResult from \"../FreelancerTraining/AssessResult.vue\";\nexport default {\n    name: \"InforFreelancerTraining\",\n    components: { AssessResult },\n\n    computed: {\n        ...mapGetters({\n            freelancer: \"getFreelancerTrainingDetail\",\n            taskList: \"getTaskList\",\n        }),\n        progress() {\n            let completed = 0;\n            for (let i = 0; i < this.taskList.length; i++) {\n                if (this.taskList[i].status) {\n                    completed++;\n                }\n            }\n\n            return (completed / this.taskList.length) * 100;\n        },\n    },\n    async created() {\n        try {\n            const token = localStorage.getItem(\"token\");\n            const freelancerId = this.$route.params.freelancerId;\n            const res = await axios.get(\n                `${config.domain}/project/get-infor-training`,\n                {\n                    params: {\n                        freelancerId,\n                    },\n                    headers: { Authorization: \"Bearer \" + token },\n                }\n            );\n            this.$store.commit(\"SET_FREELANCER_TRAINING_DETAIL\", {\n                ...res.data.result,\n                progress: this.progressCaculate(res.data.result.tasks),\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    },\n    methods: {\n        progressCaculate(tasks) {\n            let completed = 0;\n            for (let i = 0; i < tasks.length; i++) {\n                if (tasks[i].status) {\n                    completed++;\n                }\n            }\n\n            return (completed / tasks.length) * 100;\n        },\n    },\n};\n</script>\n\n<style></style>\n"]},"metadata":{},"sourceType":"module"}