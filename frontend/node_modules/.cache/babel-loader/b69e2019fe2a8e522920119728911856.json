{"ast":null,"code":"import axios from \"axios\";\nimport config from \"@/config/index.js\";\nimport { mapGetters } from \"vuex\";\nimport AssessResult from \"../FreelancerTraining/AssessResult.vue\";\nexport default {\n  name: \"InforFreelancerTraining\",\n  components: {\n    AssessResult\n  },\n  computed: { ...mapGetters({\n      freelancer: \"getFreelancerTrainingDetail\",\n      taskList: \"getTaskList\"\n    }),\n\n    progress() {\n      let completed = 0;\n\n      for (let i = 0; i < this.taskList.length; i++) {\n        if (this.taskList[i].status) {\n          completed++;\n        }\n      }\n\n      return completed / this.taskList.length * 100;\n    }\n\n  },\n\n  async created() {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const freelancerId = this.$route.params.freelancerId;\n      const res = await axios.get(`${config.domain}/project/get-infor-training`, {\n        params: {\n          freelancerId\n        },\n        headers: {\n          Authorization: \"Bearer \" + token\n        }\n      });\n      this.$store.commit(\"SET_FREELANCER_TRAINING_DETAIL\", { ...res.data.result,\n        progress: this.progressCaculate(res.data.result.tasks)\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  },\n\n  methods: {\n    progressCaculate(tasks) {\n      let completed = 0;\n\n      for (let i = 0; i < tasks.length; i++) {\n        if (tasks[i].status) {\n          completed++;\n        }\n      }\n\n      return completed / tasks.length * 100;\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA8DA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,UAAT,QAA2B,MAA3B;AACA,OAAOC,YAAP,MAAyB,wCAAzB;AACA,eAAe;EACXC,IAAI,EAAE,yBADK;EAEXC,UAAU,EAAE;IAAEF;EAAF,CAFD;EAIXG,QAAQ,EAAE,EACN,GAAGJ,UAAU,CAAC;MACVK,UAAU,EAAE,6BADF;MAEVC,QAAQ,EAAE;IAFA,CAAD,CADP;;IAKNC,QAAQ,GAAG;MACP,IAAIC,SAAQ,GAAI,CAAhB;;MACA,KAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,KAAKH,QAAL,CAAcI,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;QAC3C,IAAI,KAAKH,QAAL,CAAcG,CAAd,EAAiBE,MAArB,EAA6B;UACzBH,SAAS;QACb;MACJ;;MAEA,OAAQA,SAAQ,GAAI,KAAKF,QAAL,CAAcI,MAA3B,GAAqC,GAA5C;IACH;;EAdK,CAJC;;EAoBX,MAAME,OAAN,GAAgB;IACZ,IAAI;MACA,MAAMC,KAAI,GAAIC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;MACA,MAAMC,YAAW,GAAI,KAAKC,MAAL,CAAYC,MAAZ,CAAmBF,YAAxC;MACA,MAAMG,GAAE,GAAI,MAAMrB,KAAK,CAACsB,GAAN,CACb,GAAErB,MAAM,CAACsB,MAAO,6BADH,EAEd;QACIH,MAAM,EAAE;UACJF;QADI,CADZ;QAIIM,OAAO,EAAE;UAAEC,aAAa,EAAE,YAAYV;QAA7B;MAJb,CAFc,CAAlB;MASA,KAAKW,MAAL,CAAYC,MAAZ,CAAmB,gCAAnB,EAAqD,EACjD,GAAGN,GAAG,CAACO,IAAJ,CAASC,MADqC;QAEjDpB,QAAQ,EAAE,KAAKqB,gBAAL,CAAsBT,GAAG,CAACO,IAAJ,CAASC,MAAT,CAAgBE,KAAtC;MAFuC,CAArD;IAIJ,CAhBA,CAgBE,OAAOC,KAAP,EAAc;MACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACJ;EACH,CAxCU;;EAyCXG,OAAO,EAAE;IACLL,gBAAgB,CAACC,KAAD,EAAQ;MACpB,IAAIrB,SAAQ,GAAI,CAAhB;;MACA,KAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIoB,KAAK,CAACnB,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;QACnC,IAAIoB,KAAK,CAACpB,CAAD,CAAL,CAASE,MAAb,EAAqB;UACjBH,SAAS;QACb;MACJ;;MAEA,OAAQA,SAAQ,GAAIqB,KAAK,CAACnB,MAAnB,GAA6B,GAApC;IACH;;EAVI;AAzCE,CAAf","names":["axios","config","mapGetters","AssessResult","name","components","computed","freelancer","taskList","progress","completed","i","length","status","created","token","localStorage","getItem","freelancerId","$route","params","res","get","domain","headers","Authorization","$store","commit","data","result","progressCaculate","tasks","error","console","log","methods"],"sourceRoot":"","sources":["C:\\Users\\Admin\\Desktop\\SUPLANCER\\frontend\\src\\components\\Project\\FreelancerTraining\\InforFreelancerTraining.vue"],"sourcesContent":["<template>\r\n    <div class=\"training-detail container\">\r\n        <div class=\"training-detail-freelancer\">\r\n            <div class=\"row align-items-center border rounded-2 p-3\">\r\n                <div\r\n                    class=\"col-5 d-flex justify-content-center\"\r\n                    style=\"height: 180px; width: 200px\"\r\n                >\r\n                    <img\r\n                        :src=\"freelancer.urlAvatar\"\r\n                        alt=\"\"\r\n                        style=\"height: 100%; width: 100%\"\r\n                        class=\"rounded-circle\"\r\n                    />\r\n                </div>\r\n                <div class=\"col-7 flex-grow-1\" style=\"min-height: 200px\">\r\n                    <div class=\"col-12 my-1\">\r\n                        <strong>MSSV: </strong> {{ freelancer.username }}\r\n                    </div>\r\n                    <div class=\"col-12 my-1\">\r\n                        <strong>Họ và tên: </strong> {{ freelancer.name }}\r\n                    </div>\r\n                    <div class=\"col-12 my-1\">\r\n                        <strong>Email: </strong>\r\n                        {{ freelancer.email }}\r\n                    </div>\r\n\r\n                    <div class=\"col-12 my-1\">\r\n                        <strong>Tiến độ: </strong>\r\n\r\n                        <div class=\"progress w-100 my-3\">\r\n                            <div\r\n                                role=\"progressbar\"\r\n                                :class=\"\r\n                                    progress\r\n                                        ? ' bg-success text-light d-flex justify-content-center align-items-center'\r\n                                        : ' d-flex justify-content-center align-items-center'\r\n                                \"\r\n                                :style=\"`width: ${progress || 100}%`\"\r\n                            >\r\n                                {{ `${progress ? progress.toFixed() : 0}%` }}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <button\r\n                        type=\"button\"\r\n                        class=\"btn btn-outline-warning me-3\"\r\n                        style=\"width: auto;\"\r\n                        data-bs-toggle=\"modal\"\r\n                        data-bs-target=\"#AssessResultModal\"\r\n                    >\r\n                        <i class=\"bi bi-pencil-square\"></i> Đánh giá kết quả\r\n                        thực tập\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <AssessResult />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport config from \"@/config/index.js\";\r\nimport { mapGetters } from \"vuex\";\r\nimport AssessResult from \"../FreelancerTraining/AssessResult.vue\";\r\nexport default {\r\n    name: \"InforFreelancerTraining\",\r\n    components: { AssessResult },\r\n\r\n    computed: {\r\n        ...mapGetters({\r\n            freelancer: \"getFreelancerTrainingDetail\",\r\n            taskList: \"getTaskList\",\r\n        }),\r\n        progress() {\r\n            let completed = 0;\r\n            for (let i = 0; i < this.taskList.length; i++) {\r\n                if (this.taskList[i].status) {\r\n                    completed++;\r\n                }\r\n            }\r\n\r\n            return (completed / this.taskList.length) * 100;\r\n        },\r\n    },\r\n    async created() {\r\n        try {\r\n            const token = localStorage.getItem(\"token\");\r\n            const freelancerId = this.$route.params.freelancerId;\r\n            const res = await axios.get(\r\n                `${config.domain}/project/get-infor-training`,\r\n                {\r\n                    params: {\r\n                        freelancerId,\r\n                    },\r\n                    headers: { Authorization: \"Bearer \" + token },\r\n                }\r\n            );\r\n            this.$store.commit(\"SET_FREELANCER_TRAINING_DETAIL\", {\r\n                ...res.data.result,\r\n                progress: this.progressCaculate(res.data.result.tasks),\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    },\r\n    methods: {\r\n        progressCaculate(tasks) {\r\n            let completed = 0;\r\n            for (let i = 0; i < tasks.length; i++) {\r\n                if (tasks[i].status) {\r\n                    completed++;\r\n                }\r\n            }\r\n\r\n            return (completed / tasks.length) * 100;\r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<style>\r\n.btn-outline-warning {\r\n    --bs-btn-color: #95A800;\r\n    --bs-btn-border-color: #95A800;\r\n    --bs-btn-hover-color: #000;\r\n    --bs-btn-hover-bg: #95A800;\r\n    --bs-btn-hover-border-color: #95A800;\r\n    --bs-btn-focus-shadow-rgb: 255,193,7;\r\n    --bs-btn-active-color: #000;\r\n    --bs-btn-active-bg: #95A800;\r\n    --bs-btn-active-border-color: #95A800;\r\n    --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\r\n    --bs-btn-disabled-color: #95A800;\r\n    --bs-btn-disabled-bg: transparent;\r\n    --bs-btn-disabled-border-color: #95A800;\r\n    --bs-gradient: none;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}