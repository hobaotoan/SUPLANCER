{"ast":null,"code":"import axios from \"axios\";\nimport config from \"@/config/index.js\";\nimport { mapGetters, mapMutations } from \"vuex\";\nexport default {\n  name: \"RegisterList\",\n  methods: { ...mapMutations({\n      showDetail: \"SHOW_DETAIL\"\n    }),\n\n    async handleTrainingDetail() {\n      const token = localStorage.getItem(\"token\");\n      this.showDetail();\n      const res = await axios.get(`${config.domain}/project/get-infor-training`, {\n        params: {\n          freelancerId: this.freelancer.id\n        },\n        headers: {\n          Authorization: \"Bearer \" + token\n        }\n      });\n      this.$store.commit(\"SET_FREELANCER_TRAINING_DETAIL\", { ...res.data.result,\n        progress: this.progressCaculate(res.data.result.tasks)\n      });\n    },\n\n    progressCaculate(tasks) {\n      let completed = 0;\n\n      for (let i = 0; i < tasks.length; i++) {\n        if (tasks[i].status) {\n          completed++;\n        }\n      }\n\n      return completed / tasks.length * 100;\n    }\n\n  },\n  props: [\"freelancer\", \"index\"],\n  computed: mapGetters({\n    account: \"getAccount\"\n  })\n};","map":{"version":3,"mappings":"AAsDA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,MAAzC;AAEA,eAAe;EACXC,IAAI,EAAE,cADK;EAEXC,OAAO,EAAE,EACL,GAAGF,YAAY,CAAC;MACZG,UAAU,EAAE;IADA,CAAD,CADV;;IAIL,MAAMC,oBAAN,GAA6B;MACzB,MAAMC,KAAI,GAAIC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;MACA,KAAKJ,UAAL;MAEA,MAAMK,GAAE,GAAI,MAAMX,KAAK,CAACY,GAAN,CACb,GAAEX,MAAM,CAACY,MAAO,6BADH,EAEd;QACIC,MAAM,EAAE;UACJC,YAAY,EAAE,KAAKC,UAAL,CAAgBC;QAD1B,CADZ;QAIIC,OAAO,EAAE;UAAEC,aAAa,EAAE,YAAYX;QAA7B;MAJb,CAFc,CAAlB;MASA,KAAKY,MAAL,CAAYC,MAAZ,CAAmB,gCAAnB,EAAqD,EACjD,GAAGV,GAAG,CAACW,IAAJ,CAASC,MADqC;QAEjDC,QAAQ,EAAE,KAAKC,gBAAL,CAAsBd,GAAG,CAACW,IAAJ,CAASC,MAAT,CAAgBG,KAAtC;MAFuC,CAArD;IAIH,CArBI;;IAsBLD,gBAAgB,CAACC,KAAD,EAAQ;MACpB,IAAIC,SAAQ,GAAI,CAAhB;;MACA,KAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,KAAK,CAACG,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;QACnC,IAAIF,KAAK,CAACE,CAAD,CAAL,CAASE,MAAb,EAAqB;UACjBH,SAAS;QACb;MACJ;;MAEA,OAAQA,SAAQ,GAAID,KAAK,CAACG,MAAnB,GAA6B,GAApC;IACH;;EA/BI,CAFE;EAmCXE,KAAK,EAAE,CAAC,YAAD,EAAe,OAAf,CAnCI;EAoCXC,QAAQ,EAAE9B,UAAU,CAAC;IAAE+B,OAAO,EAAE;EAAX,CAAD;AApCT,CAAf","names":["axios","config","mapGetters","mapMutations","name","methods","showDetail","handleTrainingDetail","token","localStorage","getItem","res","get","domain","params","freelancerId","freelancer","id","headers","Authorization","$store","commit","data","result","progress","progressCaculate","tasks","completed","i","length","status","props","computed","account"],"sourceRoot":"","sources":["C:\\Users\\Admin\\Downloads\\internship-management-main\\internship-management-main\\frontend\\src\\components\\Project\\FreelancerTraining\\ItemFreelancer.vue"],"sourcesContent":["<template>\n    <div class=\"accordion\">\n        <div class=\"accordion-item\">\n            <h2 class=\"accordion-header\" :id=\"`flush-heading${index}`\">\n                <button\n                    class=\"accordion-button collapsed\"\n                    type=\"button\"\n                    data-bs-toggle=\"collapse\"\n                    :data-bs-target=\"`#flush-collapse${index}`\"\n                    aria-expanded=\"false\"\n                    :aria-controls=\"`flush-collapse${index}`\"\n                >\n                    <img\n                        :src=\"freelancer.urlAvatar\"\n                        alt=\"\"\n                        class=\"me-2 rounded-circle\"\n                        style=\"width: 30px; height: 30px\"\n                    />{{ freelancer.name }}\n                </button>\n            </h2>\n            <div\n                :id=\"`flush-collapse${index}`\"\n                class=\"accordion-collapse collapse\"\n                :aria-labelledby=\"`flush-heading${index}`\"\n                data-bs-parent=\"#accordionFlushExample\"\n            >\n                <div class=\"accordion-body row\">\n                    <div class=\"col-6\">\n                        <strong>Họ và tên: </strong> {{ freelancer.name }}\n                    </div>\n\n                    <div class=\"col-6\">\n                        <strong>Điện thoại: </strong> {{ freelancer.phoneNumber }}\n                    </div>\n                    <div class=\"col-12 mt-2\">\n                        <strong>Email: </strong> {{ freelancer.email }}\n                    </div>\n                    <div class=\"col-12 d-flex justify-content-center mt-2\">\n                        <button\n                            type=\"button\"\n                            class=\"btn btn-outline-secondary p-2\"\n                            style=\"font-size: 15px\"\n                            @click=\"handleTrainingDetail\"\n                        >\n                            Xem chi tiết\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport config from \"@/config/index.js\";\nimport { mapGetters, mapMutations } from \"vuex\";\n\nexport default {\n    name: \"RegisterList\",\n    methods: {\n        ...mapMutations({\n            showDetail: \"SHOW_DETAIL\",\n        }),\n        async handleTrainingDetail() {\n            const token = localStorage.getItem(\"token\");\n            this.showDetail();\n\n            const res = await axios.get(\n                `${config.domain}/project/get-infor-training`,\n                {\n                    params: {\n                        freelancerId: this.freelancer.id,\n                    },\n                    headers: { Authorization: \"Bearer \" + token },\n                }\n            );\n            this.$store.commit(\"SET_FREELANCER_TRAINING_DETAIL\", {\n                ...res.data.result,\n                progress: this.progressCaculate(res.data.result.tasks),\n            });\n        },\n        progressCaculate(tasks) {\n            let completed = 0;\n            for (let i = 0; i < tasks.length; i++) {\n                if (tasks[i].status) {\n                    completed++;\n                }\n            }\n\n            return (completed / tasks.length) * 100;\n        },\n    },\n    props: [\"freelancer\", \"index\"],\n    computed: mapGetters({ account: \"getAccount\" }),\n};\n</script>\n\n<style></style>\n"]},"metadata":{},"sourceType":"module"}