{"ast":null,"code":"import axios from \"axios\";\nimport config from \"@/config/index.js\";\nimport TitleStructure from \"../../components/GlobalComponent/TitleStructure.vue\";\nimport EditInforAccount from \"../../components/Admin/ManageAccount/EditInforAccount.vue\";\nimport CreateAccount from \"../../components/Admin/ManageAccount/CreateAccount.vue\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  name: \"AdminManage\",\n  components: {\n    TitleStructure,\n    EditInforAccount,\n    CreateAccount\n  },\n\n  data() {\n    return {\n      accountFreelancer: [],\n      accountLeader: [],\n      accountProject: [],\n      accounts: [],\n      accountUpdate: {}\n    };\n  },\n\n  computed: mapGetters({\n    accountCurrent: \"getAccountCurrent\"\n  }),\n\n  mounted() {\n    document.querySelectorAll(\".type__item\")[0].classList.add(\"active\");\n    const typeItems = document.querySelectorAll(\".type__item\");\n    [...typeItems].forEach(function (typeItem) {\n      typeItem.addEventListener(\"click\", handleBorderItem);\n    });\n\n    function handleBorderItem(event) {\n      [...typeItems].forEach(typeItem => {\n        typeItem.classList.remove(\"active\");\n      });\n      event.target.classList.add(\"active\");\n    }\n  },\n\n  async created() {\n    const token = localStorage.getItem(\"token\");\n    const response = await axios.get(`${config.domain}/admin/get-all-account`, {\n      headers: {\n        Authorization: \"Bearer \" + token\n      }\n    });\n    this.accounts = response.data.result;\n    this.$store.commit(\"SET_ACCOUNT_CURRENT\", response.data.result);\n  },\n\n  methods: {\n    handleFilter(event) {\n      const filter = event.target.id;\n\n      if (filter == \"leader\") {\n        this.$store.commit(\"SET_ACCOUNT_CURRENT\", this.accounts.filter(account => account.rule == \"LEADER\"));\n      } else if (filter == \"freelancer\") {\n        this.$store.commit(\"SET_ACCOUNT_CURRENT\", this.accounts.filter(account => account.rule == \"FREELANCER\"));\n      } else if (filter == \"project\") {\n        this.$store.commit(\"SET_ACCOUNT_CURRENT\", this.accounts.filter(account => account.rule == \"PROJECT\"));\n      } else if (filter == \"all\") {\n        this.$store.commit(\"SET_ACCOUNT_CURRENT\", this.accounts);\n      }\n    },\n\n    async handleDeleteAccount(accountId) {\n      const token = localStorage.getItem(\"token\");\n      const res = await axios.delete(`${config.domain}/admin/delete-account`, {\n        headers: {\n          Authorization: \"Bearer \" + token\n        },\n        data: {\n          accountId\n        }\n      });\n      this.$store.commit(\"SET_TOAST\", {\n        message: res.data.message,\n        isSuccess: res.data.status\n      });\n\n      if (res.data.status) {\n        this.$store.commit(\"DELETE_ACCOUNT_CURRENT\", accountId);\n      }\n    },\n\n    handleSetUpdate(account) {\n      this.$store.commit(\"SET_ACCOUNT_UPDATE\", account);\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","config","TitleStructure","EditInforAccount","CreateAccount","mapGetters","name","components","data","accountFreelancer","accountLeader","accountProject","accounts","accountUpdate","computed","accountCurrent","mounted","document","querySelectorAll","classList","add","typeItems","forEach","typeItem","addEventListener","handleBorderItem","event","remove","target","created","token","localStorage","getItem","response","get","domain","headers","Authorization","result","$store","commit","methods","handleFilter","filter","id","account","rule","handleDeleteAccount","accountId","res","delete","message","isSuccess","status","handleSetUpdate"],"sourceRoot":"","sources":["C:\\Users\\Admin\\Downloads\\internship-management-main\\internship-management-main\\frontend\\src\\views\\admin\\AdminManage.vue"],"sourcesContent":["<template>\n    <div>\n        <div class=\"admin-manage animate__animated animate__fadeIn\">\n            <TitleStructure :title=\"`Danh sách tài khoản`\"></TitleStructure>\n            <div class=\"type-account col-12 d-flex justify-content-center\">\n                <button type=\"button\" class=\"type__item btn\" id=\"all\" @click=\"handleFilter\">\n                    Tất cả tài khoản\n                </button>\n                <button type=\"button\" class=\"type__item btn\" id=\"leader\" @click=\"handleFilter\">\n                    Tài khoản leader\n                </button>\n                <button type=\"button\" class=\"type__item btn\" id=\"freelancer\" @click=\"handleFilter\">\n                    Tài khoản đơn vị dự án\n                </button>\n                <button type=\"button\" class=\"type__item btn\" id=\"project\" @click=\"handleFilter\">\n                    Tài khoản freelancer\n                </button>\n            </div>\n            <div\n                class=\"list-account mt-5 table-wrapper-scroll-y my-custom-scrollbar\"\n            >\n                <table class=\"table table-striped\">\n                    <thead>\n                        <tr>\n                            <th class=\"text-center\" scope=\"col\">#</th>\n                            <th class=\"text-center\" scope=\"col\">\n                                Tên tài khoản\n                            </th>\n                            <th class=\"text-center\" scope=\"col\">Tên người dùng</th>\n                            <th class=\"text-center\" scope=\"col\">\n                                Loại người dùng\n                            </th>\n                            <th class=\"text-center\" scope=\"col\">Tùy chọn</th>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        <tr\n                            v-for=\"(account, index) in accountCurrent\"\n                            :key=\"index\"\n                        >\n                            <th class=\"text-center\" scope=\"row\">\n                                {{ index + 1 }}\n                            </th>\n                            <td class=\"text-center\">{{ account.username }}</td>\n                            <td class=\"text-center\">{{ account.name }}</td>\n                            <td class=\"text-center\">{{ account.rule }}</td>\n                            <td class=\"text-center\">\n                                <button\n                                    type=\"button\"\n                                    class=\"btn\"\n                                    data-bs-toggle=\"modal\"\n                                    data-bs-target=\"#editInforAccount\"\n                                    @click=\"handleSetUpdate(account)\"\n                                >\n                                    <i\n                                        class=\"bi bi-pencil-square text-warning fs-5\"\n                                    ></i>\n                                </button>\n                                <button\n                                    type=\"button\"\n                                    class=\"btn\"\n                                    @click=\"handleDeleteAccount(account._id)\"\n                                >\n                                    <i\n                                        class=\"bi bi-archive-fill text-danger fs-5\"\n                                    ></i>\n                                </button>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n        <div class=\"d-flex justify-content-center mt-3\">\n            <button\n                type=\"button\"\n                class=\"btn btn-success\"\n                data-bs-toggle=\"modal\"\n                data-bs-target=\"#createAccount\"\n            >\n                <i class=\"bi bi-plus-circle-fill\"></i> &nbsp; Thêm tài khoản\n            </button>\n        </div>\n        <EditInforAccount></EditInforAccount>\n\n        <CreateAccount></CreateAccount>\n    </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport config from \"@/config/index.js\";\nimport TitleStructure from \"../../components/GlobalComponent/TitleStructure.vue\";\nimport EditInforAccount from \"../../components/Admin/ManageAccount/EditInforAccount.vue\";\nimport CreateAccount from \"../../components/Admin/ManageAccount/CreateAccount.vue\";\nimport { mapGetters } from \"vuex\";\n\nexport default {\n    name: \"AdminManage\",\n    components: { TitleStructure, EditInforAccount, CreateAccount },\n\n    data() {\n        return {\n            accountFreelancer: [],\n            accountLeader: [],\n            accountProject: [],\n            accounts: [],\n            accountUpdate: {},\n        };\n    },\n    computed: mapGetters({ accountCurrent: \"getAccountCurrent\" }),\n    mounted() {\n        document.querySelectorAll(\".type__item\")[0].classList.add(\"active\");\n\n        const typeItems = document.querySelectorAll(\".type__item\");\n\n        [...typeItems].forEach(function (typeItem) {\n            typeItem.addEventListener(\"click\", handleBorderItem);\n        });\n\n        function handleBorderItem(event) {\n            [...typeItems].forEach((typeItem) => {\n                typeItem.classList.remove(\"active\");\n            });\n            event.target.classList.add(\"active\");\n        }\n    },\n    async created() {\n        const token = localStorage.getItem(\"token\");\n        const response = await axios.get(\n            `${config.domain}/admin/get-all-account`,\n            {\n                headers: {\n                    Authorization: \"Bearer \" + token,\n                },\n            }\n        );\n\n        this.accounts = response.data.result;\n\n        this.$store.commit(\"SET_ACCOUNT_CURRENT\", response.data.result);\n    },\n    methods: {\n        handleFilter(event) {\n            const filter = event.target.id;\n            if (filter == \"leader\") {\n                this.$store.commit(\n                    \"SET_ACCOUNT_CURRENT\",\n                    this.accounts.filter((account) => account.rule == \"LEADER\")\n                );\n            } else if (filter == \"freelancer\") {\n                this.$store.commit(\n                    \"SET_ACCOUNT_CURRENT\",\n                    this.accounts.filter((account) => account.rule == \"FREELANCER\")\n                );\n            } else if (filter == \"project\") {\n                this.$store.commit(\n                    \"SET_ACCOUNT_CURRENT\",\n                    this.accounts.filter((account) => account.rule == \"PROJECT\")\n                );\n            } else if (filter == \"all\") {\n                this.$store.commit(\"SET_ACCOUNT_CURRENT\", this.accounts);\n            }\n        },\n        async handleDeleteAccount(accountId) {\n            const token = localStorage.getItem(\"token\");\n            const res = await axios.delete(\n                `${config.domain}/admin/delete-account`,\n                {\n                    headers: { Authorization: \"Bearer \" + token },\n\n                    data: {\n                        accountId,\n                    },\n                }\n            );\n\n            this.$store.commit(\"SET_TOAST\", {\n                message: res.data.message,\n                isSuccess: res.data.status,\n            });\n\n            if (res.data.status) {\n                this.$store.commit(\"DELETE_ACCOUNT_CURRENT\", accountId);\n            }\n        },\n\n        handleSetUpdate(account) {\n            this.$store.commit(\"SET_ACCOUNT_UPDATE\", account);\n        },\n    },\n};\n</script>\n\n<style scoped>\n.btn.active{\n    border-color: none!important;;\n}\n.type__item {\n    background-color: #95A800!important;\n    border-color: none;\n    color: white;\n    font-size: 12px;\n}\n\n.type__item.active {\n    /* transition: border-bottom 0.5s linear;\n    border-bottom-color: #2f2fe6; */\n}\n\n.my-custom-scrollbar {\n    position: relative;\n    height: 400px;\n    overflow: auto;\n}\n.table-wrapper-scroll-y {\n    display: block;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}