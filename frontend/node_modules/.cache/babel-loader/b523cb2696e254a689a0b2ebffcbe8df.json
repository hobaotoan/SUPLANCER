{"ast":null,"code":"import axios from \"axios\";\nimport config from \"@/config/index.js\";\nimport ItemFreelancer from \"../../components/Project/FreelancersRegister/ItemFreelancer.vue\";\nimport InformationDetail from \"../../components/Project/FreelancersRegister/InformationDetail.vue\";\nimport Statistics from \"../../components/Project/FreelancersRegister/Statistics.vue\";\nimport Modal from \"@/components/Modal/Modal.vue\";\nimport { mapActions, mapGetters, mapMutations } from \"vuex\";\nexport default {\n  name: \"FreelancersRegister\",\n  components: {\n    ItemFreelancer,\n    InformationDetail,\n    Statistics,\n    Modal\n  },\n  computed: { ...mapGetters({\n      isShowDetail: \"getShowDetail\",\n      freelancerList: \"getFreelancerList\",\n      account: \"getAccount\",\n      freelancer: \"getFreelancerDetail\"\n    }),\n    ...mapMutations({\n      closeDetail: \"CLOSE_DETAIL\"\n    })\n  },\n  methods: { ...mapActions([\"setAccount\"]),\n    ...mapMutations({\n      closeDetail: \"CLOSE_DETAIL\"\n    }),\n\n    async handleRefuse(freelancerId) {\n      try {\n        const toast = await this.handleDeleteFreelancer(freelancerId);\n        this.$store.dispatch(\"setToast\", {\n          isSuccess: toast.status,\n          message: toast.message\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n    async handleConfirm(freelancerId) {\n      const token = localStorage.getItem(\"token\");\n\n      try {\n        const res = await axios.post(`${config.domain}/project/confirm/`, {\n          freelancerId,\n          projectId: this.account.id\n        }, {\n          headers: {\n            Authorization: \"Bearer \" + token\n          }\n        });\n        await this.handleRefuse(freelancerId);\n\n        if (res.data.status) {\n          this.$store.dispatch(\"setToast\", {\n            isSuccess: res.data.status,\n            message: res.data.message\n          });\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n    async handleDeleteFreelancer(freelancerId) {\n      const token = localStorage.getItem(\"token\");\n\n      try {\n        const res = await axios.delete(`${config.domain}/project/refuse-register/`, {\n          headers: {\n            Authorization: \"Bearer \" + token\n          },\n          data: {\n            freelancerId,\n            projectId: this.account.id\n          }\n        });\n\n        if (res.data.status) {\n          this.$store.commit(\"DELETE_FREELANCER\", this.freelancer.id);\n        }\n\n        return {\n          status: res.data.status,\n          message: res.data.message\n        };\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n  },\n\n  async created() {\n    this.$store.commit(\"CLOSE_DETAIL\");\n    const token = localStorage.getItem(\"token\");\n    await this.setAccount();\n    const res = await axios.get(`${config.domain}/project/get-freelancers-register/`, {\n      params: {\n        projectId: this.account.id\n      },\n      headers: {\n        Authorization: \"Bearer \" + token\n      }\n    });\n    this.$store.commit(\"SET_FREELANCER_LIST\", res.data.result);\n  }\n\n};","map":{"version":3,"mappings":"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","names":["axios","config","ItemFreelancer","InformationDetail","Statistics","Modal","mapActions","mapGetters","mapMutations","name","components","computed","isShowDetail","freelancerList","account","freelancer","closeDetail","methods","handleRefuse","freelancerId","toast","handleDeleteFreelancer","$store","dispatch","isSuccess","status","message","error","console","log","handleConfirm","token","localStorage","getItem","res","post","domain","projectId","id","headers","Authorization","data","delete","commit","created","setAccount","get","params","result"],"sourceRoot":"","sources":["C:\\Users\\Admin\\Downloads\\internship-management-main\\internship-management-main\\frontend\\src\\views\\project\\FreelancersRegister.vue"],"sourcesContent":["<template>\n    <div>\n        <div\n            class=\"freelancers-register row p-4 animate__fadeIn animate__animated\"\n        >\n            <div class=\"col-12\">\n                <div class=\"d-flex\">\n                    <h2\n                        class=\"header-list label m-0 p-2 pt-4 fw-bold col-6\"\n\n                    >\n                        Sinh viên đăng ký\n                        <div class=\"line my-3\"></div>\n                    </h2>\n                    <h2\n                        class=\"header-list label m-0 p-2 pt-4 fw-bold col-6\"\n\n                    >\n                        Thông tin chi tiết\n                        <div class=\"line my-3\"></div>\n                    </h2>\n                </div>\n            </div>\n            <div\n                class=\"accordion col-6\"\n                style=\"height: 500px; overflow-y: scroll\"\n            >\n                <ItemFreelancer\n                    v-for=\"(freelancer, index) in freelancerList\"\n                    :key=\"index\"\n                    class=\"mb-2\"\n                    :freelancer=\"freelancer\"\n                    :index=\"index\"\n                />\n            </div>\n            <div class=\"col-6\">\n                <InformationDetail v-if=\"isShowDetail\" />\n                <Statistics v-else />\n            </div>\n        </div>\n        <Modal id=\"ModalRefuse\" message=\"Bạn có chắc muốn xóa ứng viên này?\"\n            ><button\n                type=\"button\"\n                class=\"btn btn-secondary\"\n                data-bs-dismiss=\"modal\"\n            >\n                Đóng\n            </button>\n\n            <button\n                type=\"button\"\n                class=\"btn btn-primary\"\n                data-bs-dismiss=\"modal\"\n                @click=\"\n                    handleRefuse(freelancer.id);\n                    closeDetail();\n                \"\n            >\n                Xác nhận\n            </button>\n        </Modal>\n\n        <Modal\n            id=\"ModalAccept\"\n            message=\"Bạn có chắc muốn xác nhận ứng viên này?\"\n            ><button\n                type=\"button\"\n                class=\"btn btn-secondary\"\n                data-bs-dismiss=\"modal\"\n            >\n                Đóng\n            </button>\n            <button\n                type=\"button\"\n                class=\"btn btn-primary\"\n                data-bs-dismiss=\"modal\"\n                @click=\"\n                    handleConfirm(freelancer.id);\n                    closeDetail();\n                \"\n            >\n                Xác nhận\n            </button>\n        </Modal>\n    </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport config from \"@/config/index.js\";\nimport ItemFreelancer from \"../../components/Project/FreelancersRegister/ItemFreelancer.vue\";\nimport InformationDetail from \"../../components/Project/FreelancersRegister/InformationDetail.vue\";\nimport Statistics from \"../../components/Project/FreelancersRegister/Statistics.vue\";\nimport Modal from \"@/components/Modal/Modal.vue\";\n\nimport { mapActions, mapGetters, mapMutations } from \"vuex\";\nexport default {\n    name: \"FreelancersRegister\",\n    components: { ItemFreelancer, InformationDetail, Statistics, Modal },\n    computed: {\n        ...mapGetters({\n            isShowDetail: \"getShowDetail\",\n            freelancerList: \"getFreelancerList\",\n            account: \"getAccount\",\n            freelancer: \"getFreelancerDetail\",\n        }),\n        ...mapMutations({ closeDetail: \"CLOSE_DETAIL\" }),\n    },\n    methods: {\n        ...mapActions([\"setAccount\"]),\n        ...mapMutations({ closeDetail: \"CLOSE_DETAIL\" }),\n        async handleRefuse(freelancerId) {\n            try {\n                const toast = await this.handleDeleteFreelancer(freelancerId);\n\n                this.$store.dispatch(\"setToast\", {\n                    isSuccess: toast.status,\n                    message: toast.message,\n                });\n            } catch (error) {\n                console.log(error);\n            }\n        },\n        async handleConfirm(freelancerId) {\n            const token = localStorage.getItem(\"token\");\n            try {\n                const res = await axios.post(\n                    `${config.domain}/project/confirm/`,\n                    { freelancerId, projectId: this.account.id },\n                    {\n                        headers: { Authorization: \"Bearer \" + token },\n                    }\n                );\n\n                await this.handleRefuse(freelancerId);\n\n                if (res.data.status) {\n                    this.$store.dispatch(\"setToast\", {\n                        isSuccess: res.data.status,\n                        message: res.data.message,\n                    });\n                }\n            } catch (error) {\n                console.log(error);\n            }\n        },\n        async handleDeleteFreelancer(freelancerId) {\n            const token = localStorage.getItem(\"token\");\n            try {\n                const res = await axios.delete(\n                    `${config.domain}/project/refuse-register/`,\n                    {\n                        headers: { Authorization: \"Bearer \" + token },\n\n                        data: {\n                            freelancerId,\n                            projectId: this.account.id,\n                        },\n                    }\n                );\n\n                if (res.data.status) {\n                    this.$store.commit(\"DELETE_FREELANCER\", this.freelancer.id);\n                }\n\n                return { status: res.data.status, message: res.data.message };\n            } catch (error) {\n                console.log(error);\n            }\n        },\n    },\n    async created() {\n        this.$store.commit(\"CLOSE_DETAIL\");\n\n        const token = localStorage.getItem(\"token\");\n        await this.setAccount();\n\n        const res = await axios.get(\n            `${config.domain}/project/get-freelancers-register/`,\n            {\n                params: {\n                    projectId: this.account.id,\n                },\n                headers: { Authorization: \"Bearer \" + token },\n            }\n        );\n        this.$store.commit(\"SET_FREELANCER_LIST\", res.data.result);\n    },\n};\n</script>\n\n<style>\n.line {\n    border-bottom: 3px solid #1c57a5;\n    width: 100px;\n}\n.header-list{\n    color:#2C542F;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}